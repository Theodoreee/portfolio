{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nexport default {\n  name: \"HowIWorkPanel\",\n  mounted() {\n    // On définit les références des éléments à observer\n    const listItems = [this.$refs.listItem1, this.$refs.listItem2, this.$refs.listItem3, this.$refs.listItem4];\n\n    // Crée un observateur pour détecter lorsque chaque élément devient visible\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        // Retirer `index` puisque nous ne l'utilisons pas\n        // Si l'élément est visible\n        if (entry.isIntersecting) {\n          // On applique l'animation uniquement lorsque l'élément devient visible\n          entry.target.classList.add('animate');\n        }\n      });\n    }, {\n      threshold: 0.5\n    } // L'élément doit être visible à 50% pour déclencher l'animation\n    );\n\n    // On commence à observer chaque élément\n    listItems.forEach(item => observer.observe(item));\n  }\n};","map":{"version":3,"names":["name","mounted","listItems","$refs","listItem1","listItem2","listItem3","listItem4","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","classList","add","threshold","item","observe"],"sources":["/home/theo/Bureau/portfolio/src/components/HowIWorkPanel.vue"],"sourcesContent":["<template>\n    <section class=\"how-i-work-panel\">\n        <div class=\"panel-container\">\n            <div class=\"left-content\">\n                <h3>mes services</h3>\n                <h2>Créations de miniatures impactantes et personnalisées !</h2>\n                <p>\n                    Je vous propose de créer pour vous une miniature impactante et personnalisée pour votre chaîne\n                    YouTube. Cela vous permettra de vous professionnaliser et de toucher une plus large audience !\n                </p>\n            </div>\n            <div class=\"right-content\">\n                <ul>\n                    <li ref=\"listItem1\">Discussion autour du projet</li>\n                    <li ref=\"listItem2\">Création de prototypes</li>\n                    <li ref=\"listItem3\">Révisions basées sur les retours</li>\n                    <li ref=\"listItem4\">Livraison et suivi post-projet</li>\n                </ul>\n            </div>\n        </div>\n    </section>\n</template>\n\n<script>\nexport default {\n    name: \"HowIWorkPanel\",\n    mounted() {\n        // On définit les références des éléments à observer\n        const listItems = [this.$refs.listItem1, this.$refs.listItem2, this.$refs.listItem3, this.$refs.listItem4];\n\n        // Crée un observateur pour détecter lorsque chaque élément devient visible\n        const observer = new IntersectionObserver(\n            (entries) => {\n                entries.forEach((entry) => {  // Retirer `index` puisque nous ne l'utilisons pas\n                    // Si l'élément est visible\n                    if (entry.isIntersecting) {\n                        // On applique l'animation uniquement lorsque l'élément devient visible\n                        entry.target.classList.add('animate');\n                    }\n                });\n            },\n            { threshold: 0.5 } // L'élément doit être visible à 50% pour déclencher l'animation\n        );\n\n        // On commence à observer chaque élément\n        listItems.forEach((item) => observer.observe(item));\n    },\n};\n</script>\n\n<style scoped>\n.how-i-work-panel {\n    font-family: \"blastered\";\n    text-transform: uppercase;\n    margin: 2rem auto;\n    padding: 2rem;\n    background-color: #3b373b;\n    border-radius: 30px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n    width: 90%;\n}\n\n.panel-container {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.left-content {\n    width: 45%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}\n\n.left-content h3 {\n    text-transform: lowercase;\n    font-size: 1.6em;\n    color: #E0B0FF;\n    margin-left: 2em;\n}\n\n.left-content h2 {\n    font-size: 4rem;\n    color: #E0B0FF;\n    margin-left: 2em;\n}\n\n.left-content p {\n    font-size: 1.6rem;\n    color: #E0B0FF;\n    line-height: 1.6;\n    letter-spacing: 2px;\n    margin-left: 2em;\n}\n\n.right-content {\n    width: 45%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}\n\n.right-content ul {\n    list-style-type: none;\n    padding: 0;\n}\n\n.right-content li {\n    font-size: 4rem;\n    color: #E0B0FF;\n    margin-bottom: 1rem;\n    opacity: 0;\n    /* Initialement caché pour l'animation */\n    transform: translateX(0);\n    /* Initialement centré */\n    animation-duration: 1s;\n    animation-fill-mode: forwards;\n    /* Garder l'animation une fois terminée */\n}\n\n.right-content li::before {\n    content: \"• \";\n    color: #ffffff;\n    font-weight: bold;\n}\n\n.right-content li.animate:nth-child(odd) {\n    animation-name: slide-from-right;\n}\n\n.right-content li.animate:nth-child(even) {\n    animation-name: slide-from-left;\n}\n\n@keyframes slide-from-right {\n    0% {\n        transform: translateX(100%);\n        /* Départ de la droite */\n        opacity: 0;\n    }\n\n    100% {\n        transform: translateX(0);\n        /* Arrivée à la position initiale */\n        opacity: 1;\n    }\n}\n\n@keyframes slide-from-left {\n    0% {\n        transform: translateX(-100%);\n        /* Départ de la gauche */\n        opacity: 0;\n    }\n\n    100% {\n        transform: translateX(0);\n        /* Arrivée à la position initiale */\n        opacity: 1;\n    }\n}\n\n/* Supprimer la marge du dernier élément de la liste */\n.right-content li:last-child {\n    margin-bottom: 0;\n}\n</style>\n"],"mappings":";;AAwBA,eAAe;EACXA,IAAI,EAAE,eAAe;EACrBC,OAAOA,CAAA,EAAG;IACN;IACA,MAAMC,SAAQ,GAAI,CAAC,IAAI,CAACC,KAAK,CAACC,SAAS,EAAE,IAAI,CAACD,KAAK,CAACE,SAAS,EAAE,IAAI,CAACF,KAAK,CAACG,SAAS,EAAE,IAAI,CAACH,KAAK,CAACI,SAAS,CAAC;;IAE1G;IACA,MAAMC,QAAO,GAAI,IAAIC,oBAAoB,CACpCC,OAAO,IAAK;MACTA,OAAO,CAACC,OAAO,CAAEC,KAAK,IAAK;QAAG;QAC1B;QACA,IAAIA,KAAK,CAACC,cAAc,EAAE;UACtB;UACAD,KAAK,CAACE,MAAM,CAACC,SAAS,CAACC,GAAG,CAAC,SAAS,CAAC;QACzC;MACJ,CAAC,CAAC;IACN,CAAC,EACD;MAAEC,SAAS,EAAE;IAAI,EAAE;IACvB,CAAC;;IAED;IACAf,SAAS,CAACS,OAAO,CAAEO,IAAI,IAAKV,QAAQ,CAACW,OAAO,CAACD,IAAI,CAAC,CAAC;EACvD;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}